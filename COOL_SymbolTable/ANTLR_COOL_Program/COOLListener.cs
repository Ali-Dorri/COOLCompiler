//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:/Requisites/University/Compiler/Project/Phase 1/COOL_Parser\COOL.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ANTLR_COOL_Program {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="COOLParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface ICOOLListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="COOLParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] COOLParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="COOLParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] COOLParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>classes</c>
	/// labeled alternative in <see cref="COOLParser.programBlocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClasses([NotNull] COOLParser.ClassesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>classes</c>
	/// labeled alternative in <see cref="COOLParser.programBlocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClasses([NotNull] COOLParser.ClassesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>eof</c>
	/// labeled alternative in <see cref="COOLParser.programBlocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEof([NotNull] COOLParser.EofContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>eof</c>
	/// labeled alternative in <see cref="COOLParser.programBlocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEof([NotNull] COOLParser.EofContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="COOLParser.classDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDefine([NotNull] COOLParser.ClassDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="COOLParser.classDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDefine([NotNull] COOLParser.ClassDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>method</c>
	/// labeled alternative in <see cref="COOLParser.feature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod([NotNull] COOLParser.MethodContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>method</c>
	/// labeled alternative in <see cref="COOLParser.feature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod([NotNull] COOLParser.MethodContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>property</c>
	/// labeled alternative in <see cref="COOLParser.feature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProperty([NotNull] COOLParser.PropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>property</c>
	/// labeled alternative in <see cref="COOLParser.feature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProperty([NotNull] COOLParser.PropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="COOLParser.formal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormal([NotNull] COOLParser.FormalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="COOLParser.formal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormal([NotNull] COOLParser.FormalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>letIn</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetIn([NotNull] COOLParser.LetInContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>letIn</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetIn([NotNull] COOLParser.LetInContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>minus</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMinus([NotNull] COOLParser.MinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>minus</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMinus([NotNull] COOLParser.MinusContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] COOLParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] COOLParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>isvoid</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsvoid([NotNull] COOLParser.IsvoidContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>isvoid</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsvoid([NotNull] COOLParser.IsvoidContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>while</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile([NotNull] COOLParser.WhileContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>while</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile([NotNull] COOLParser.WhileContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>division</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivision([NotNull] COOLParser.DivisionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>division</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivision([NotNull] COOLParser.DivisionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>negative</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegative([NotNull] COOLParser.NegativeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>negative</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegative([NotNull] COOLParser.NegativeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolNot</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolNot([NotNull] COOLParser.BoolNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolNot</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolNot([NotNull] COOLParser.BoolNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lessThan</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLessThan([NotNull] COOLParser.LessThanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lessThan</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLessThan([NotNull] COOLParser.LessThanContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>block</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] COOLParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>block</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] COOLParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>id</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] COOLParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>id</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] COOLParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiply</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiply([NotNull] COOLParser.MultiplyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiply</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiply([NotNull] COOLParser.MultiplyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>if</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] COOLParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>if</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] COOLParser.IfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>case</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase([NotNull] COOLParser.CaseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>case</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase([NotNull] COOLParser.CaseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ownMethodCall</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOwnMethodCall([NotNull] COOLParser.OwnMethodCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ownMethodCall</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOwnMethodCall([NotNull] COOLParser.OwnMethodCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd([NotNull] COOLParser.AddContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd([NotNull] COOLParser.AddContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>new</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNew([NotNull] COOLParser.NewContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>new</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNew([NotNull] COOLParser.NewContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentheses([NotNull] COOLParser.ParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentheses([NotNull] COOLParser.ParenthesesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignment</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] COOLParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignment</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] COOLParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>false</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFalse([NotNull] COOLParser.FalseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>false</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFalse([NotNull] COOLParser.FalseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>int</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt([NotNull] COOLParser.IntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>int</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt([NotNull] COOLParser.IntContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>equal</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqual([NotNull] COOLParser.EqualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>equal</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqual([NotNull] COOLParser.EqualContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>true</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrue([NotNull] COOLParser.TrueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>true</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrue([NotNull] COOLParser.TrueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lessEqual</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLessEqual([NotNull] COOLParser.LessEqualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lessEqual</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLessEqual([NotNull] COOLParser.LessEqualContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>methodCall</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCall([NotNull] COOLParser.MethodCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>methodCall</c>
	/// labeled alternative in <see cref="COOLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCall([NotNull] COOLParser.MethodCallContext context);
}
} // namespace ANTLR_COOL_Program
